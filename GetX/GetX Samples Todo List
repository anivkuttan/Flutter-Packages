import 'package:flutter/material.dart';
import 'package:get/get.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return GetMaterialApp(
      debugShowCheckedModeBanner: false,
      home: HomePage(),
    );
  }
}

class HomePage extends StatelessWidget {
  // To inizilazing controller to acess
  final DataController controller = Get.put(DataController());
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('GetX Demo'),
        actions: [
          IconButton(
              icon: Icon(Icons.favorite),
              onPressed: () {
                Get.to(Favorite());
              }),
          IconButton(
              icon: Icon(Icons.archive),
              onPressed: () {
                Get.to(Archive());
              })
        ],
      ),
      body: Center(
        child: Obx(
          () {
            return ListView.builder(
              padding: EdgeInsets.symmetric(horizontal: 10, vertical: 8),
              itemCount: controller.items.length,
              itemBuilder: (context, indext) {
                return Dismissible(
                  key: UniqueKey(),
                  background: Padding(
                    padding: const EdgeInsets.all(6.0),
                    child: Container(
                      decoration: BoxDecoration(
                        color: Colors.red[300],
                        borderRadius: BorderRadius.circular(10),
                      ),
                      alignment: Alignment.centerLeft,
                      padding: EdgeInsets.only(left: 10),
                      child: Icon(Icons.favorite),
                    ),
                  ),
                  secondaryBackground: Padding(
                    padding: const EdgeInsets.all(6.0),
                    child: Container(
                      decoration: BoxDecoration(
                        color: Colors.green[300],
                        borderRadius: BorderRadius.circular(10),
                      ),
                      alignment: Alignment.centerRight,
                      padding: EdgeInsets.only(right: 10),
                      child: Icon(
                        Icons.archive,
                      ),
                    ),
                  ),
                  onDismissed: (DismissDirection direction) {
                    var removedItem = controller.items[indext];
                    controller.items.removeAt(indext);
                    if (direction == DismissDirection.endToStart) {
                      controller.archivedItem.add(removedItem);
                    }
                  },
                  child: Card(
                    elevation: 10,
                    child: SizedBox(
                      height: 70,
                      child: ListTile(
                        title: Text(controller.items[indext].productName),
                      ),
                    ),
                  ),
                ); //card
              },
            ); //listView buider
          },
        ), //box
      ), //center
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: () {
          Get.to(EntryScreen());
        },
      ),
    );
  }
}

class EntryScreen extends StatelessWidget {
  final TextEditingController textController = TextEditingController();
  final DataController controller = Get.find();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Entry Page'),
      ),
      body: Padding(
        padding: EdgeInsets.symmetric(horizontal: 20, vertical: 10),
        child: Column(
          children: [
            Expanded(
              child: TextField(
                controller: textController,
                // autofocus: true,
                maxLines: 99,
                decoration: InputDecoration(
                    hintText: 'alkc',
                    hintStyle: TextStyle(fontSize: 30, color: Colors.grey[300]),
                    border: InputBorder.none),
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
          child: Icon(Icons.save),
          onPressed: () {
            if (textController.text.isEmpty) {
              Get.back();
            } else {
              Product product = Product(productName: textController.text);
              controller.items.add(product);
              Get.back();
            }
          }),
    );
  }
}

class Favorite extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Favorite'),
        actions: [
          Icon(Icons.favorite),
          IconButton(icon: Icon(Icons.delete), onPressed: () {})
        ],
      ),
      body: Text('Favorite Page'),
    );
  }
}

class Archive extends StatelessWidget {
  final DataController controller = Get.find();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Archive'),
        actions: [
          Icon(Icons.archive),
          IconButton(
            icon: Icon(Icons.delete),
            onPressed: controller.deleteArchivedItem,
          ),
        ],
      ),
      body: Obx(
        () {
          return controller.archivedItem.length == 0
              ? Center(
                  child: Text(
                    'Empty List',
                    style: TextStyle(
                      fontSize: 20,
                    ),
                  ),
                )
              : ListView.builder(
                  itemCount: controller.archivedItem.length,
                  itemBuilder: (context, indext) {
                    return Card(
                      elevation: 10,
                      child: ListTile(
                        title: Text(
                            '${controller.archivedItem[indext].productName}'),
                      ),
                    );
                  });
        },
      ),
    );
  }
}

class Product {
  String productName;
  Product({this.productName});
}

class DataController extends GetxController {
  var items = <Product>[
    Product(productName: 'Ink Pen'),
    Product(productName: 'Scale'),
    Product(productName: 'Black Pen'),
    Product(productName: 'Pencil'),
    Product(productName: 'Rubber'),
  ].obs;
  var favoriteItems = <Product>[].obs;
  var archivedItem = <Product>[].obs;
  void deleteArchivedItem() {
    archivedItem.clear();
  }
}
